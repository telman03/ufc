definitions:
  models.Fighter:
    properties:
      created_at:
        type: string
      draws:
        type: integer
      first_name:
        type: string
      height:
        type: string
      id:
        type: integer
      last_name:
        type: string
      losses:
        type: integer
      name:
        type: string
      nickname:
        type: string
      updated_at:
        type: string
      weight:
        type: string
      wins:
        type: integer
    type: object
  models.LoginInput:
    properties:
      email:
        default: user@example.com
        example: test@example.com
        type: string
      password:
        default: "123456"
        example: password123
        type: string
    type: object
  models.RegisterInput:
    properties:
      email:
        default: user@example.com
        example: user@example.com
        type: string
      password:
        default: "123456"
        example: "123456"
        type: string
      username:
        default: testuser
        example: testuser
        type: string
    type: object
info:
  contact: {}
  description: This is an API for UFC Fight tracking
  title: UFC API
  version: "1.0"
paths:
  /fighters:
    get:
      parameters:
      - description: Fighter's Name
        in: query
        name: name
        type: string
      - description: Fighter's Stance (e.g., Southpaw, Orthodox)
        in: query
        name: stance
        type: string
      - description: Fighter's Weight
        in: query
        name: weight
        type: string
      - description: Minimum Wins
        in: query
        name: wins
        type: integer
      - description: Maximum Losses
        in: query
        name: losses
        type: integer
      - description: Limit number of results (default is 10)
        in: query
        name: limit
        type: integer
      - description: Offset for pagination (default is 0)
        in: query
        name: offset
        type: integer
      responses:
        "200":
          description: List of fighters
          schema:
            items:
              $ref: '#/definitions/models.Fighter'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses: {}
      summary: Login user
      tags:
      - auth
  /profile:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's profile using JWT token
      produces:
      - application/json
      responses:
        "200":
          description: User profile data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
  /rankings:
    get:
      consumes:
      - application/json
      description: Retrieve the rankings of fighters for a specific weight class
      parameters:
      - description: Weight class of fighters (e.g., Lightweight, Welterweight)
        in: query
        name: weightclass
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get rankings by weight class
      tags:
      - Rankings
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User Registration Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
