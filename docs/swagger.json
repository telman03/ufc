{
    "swagger": "2.0",
    "info": {
        "description": "This is an API for UFC Fight tracking",
        "title": "UFC API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/fighters": {
            "get": {
                "description": "Search fighters based on name, stance, weight, wins, losses, and paginate results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fighters"
                ],
                "summary": "Search and filter fighters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fighter's Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fighter's Stance (e.g., Southpaw, Orthodox)",
                        "name": "stance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fighter's Weight",
                        "name": "weight",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum Wins",
                        "name": "wins",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum Losses",
                        "name": "losses",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default is 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default is 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of fighters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Fighter"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the authenticated user's profile using JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterInput"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "echo.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Fighter": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "draws": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "losses": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "reach": {
                    "type": "string"
                },
                "stance": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "weight": {
                    "type": "string"
                },
                "wins": {
                    "type": "integer"
                }
            }
        },
        "models.LoginInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "default": "user@example.com",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "default": "123456",
                    "example": "password123"
                }
            }
        },
        "models.RegisterInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "default": "user@example.com",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "default": "123456",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "default": "testuser",
                    "example": "testuser"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}